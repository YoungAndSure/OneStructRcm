# 这样和直接用proto有什么区别？name不就是proto中对应的字段吗？
# 好处，一个是灵活。不用频繁改proto，增删字段。
# 第二个就是把解析、解释字段的责任抛给用户了。
# 用户有责任自己维护一个表来说明现在都有哪些数据，某数据是干嘛的，怎么解析怎么使用。
# 有的功能，不提供反倒是最好的解决办法。因为不提供，责任就在用户，用户就不会直接放手不管。
# 提供了，如果做的不完备，就会导致许多许多问题。

message KVV {
    bytes key = 1;
    bytes value = 2;
    bytes version = 3;
}

message OneStruct {
    KVV name = 1;
    repeated KVV value = 2;
}